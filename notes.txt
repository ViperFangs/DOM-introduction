We can refer to other elements in DOM with their relationship (e.g. Parent relation, sibling relation)

element.querySelector(selector) returns a reference to the first match of selector
element.querySelectorAll(selectors) returns a “nodelist” containing references to all of the matches of the selectors

It’s important to note that when using querySelectorAll, the return value is not an array. It looks like an array, and it somewhat acts like an array, but it’s really a “nodelist”.
if problems arise, is to convert the nodelist into an array. You can do this with Array.from() or the spread operator

document.createElement(tagName, [options]) creates a new element of tag type tagName. [options] in this case means you can add some optional parameters to the function.
e.g. const div = document.createElement('div');
This function does NOT put your new element into the DOM - it simply creates it in memory.

To append a new element into DOM we use:
parentNode.appendChild(childNode) appends childNode as the last child of parentNode
parentNode.insertBefore(newNode, referenceNode) inserts newNode into parentNode before referenceNode

parentNode.removeChild(child) removes child from parentNode on the DOM and returns a reference to child